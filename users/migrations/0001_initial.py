# Generated by Django 5.1 on 2024-08-22 13:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('A', 'Grup A'), ('B', 'Grup B'), ('C', 'Grup C'), ('D', 'Grup D'), ('E', 'Grup E'), ('F', 'Grup F')], max_length=1, unique=True, verbose_name='Grup Adı')),
                ('is_team_based', models.BooleanField(default=False, verbose_name='Takım Bazlı mı?')),
                ('evaluation_type', models.CharField(max_length=50, verbose_name='Değerlendirme Türü')),
                ('competition_type', models.CharField(max_length=50, verbose_name='Yarışma Türü')),
                ('component', models.CharField(blank=True, max_length=50, null=True, verbose_name='Bileşen')),
                ('participant_count', models.PositiveIntegerField(default=0, verbose_name='Katılımcı Sayısı')),
            ],
            options={
                'verbose_name': 'Grup',
                'verbose_name_plural': 'Gruplar',
            },
        ),
        migrations.CreateModel(
            name='RegistrationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6, unique=True, verbose_name='Kod')),
                ('password', models.CharField(max_length=6, verbose_name='Şifre')),
                ('used', models.BooleanField(default=False, verbose_name='Kullanıldı mı?')),
            ],
            options={
                'verbose_name': 'Kayıt Kodu',
                'verbose_name_plural': 'Kayıt Kodları',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('registration_code', models.CharField(blank=True, max_length=6, null=True, unique=True, verbose_name='Kayıt Kodu')),
                ('gender', models.CharField(choices=[('male', 'Erkek'), ('female', 'Kadın'), ('other', 'Diğer')], max_length=10, verbose_name='Cinsiyet')),
                ('avatar', models.CharField(blank=True, max_length=100, null=True, verbose_name='Avatar')),
                ('registration_code_used', models.CharField(blank=True, max_length=6, null=True, verbose_name='Kullanılan Kayıt Kodu')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Kullanıcı',
                'verbose_name_plural': 'Kullanıcılar',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(default=0, verbose_name='Puan')),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='Geri Bildirim')),
                ('evaluated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluated_user', to=settings.AUTH_USER_MODEL, verbose_name='Değerlendirilen Kullanıcı')),
                ('evaluator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluator', to=settings.AUTH_USER_MODEL, verbose_name='Değerlendiren')),
            ],
            options={
                'verbose_name': 'Değerlendirme',
                'verbose_name_plural': 'Değerlendirmeler',
            },
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(default=1, verbose_name='Seviye')),
                ('points', models.IntegerField(default=0, verbose_name='Puan')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='progress_instance', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'İlerleme',
                'verbose_name_plural': 'İlerlemeler',
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='progress',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='users.progress'),
        ),
    ]
